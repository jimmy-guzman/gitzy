name: cicd

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['12', '14', '16']
    steps:
      - uses: actions/checkout@v2

      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - run: yarn install --frozen-lockfile
      - run: yarn validate
      - run: yarn build
      - run: yarn e2e

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Codecov
        if: ${{ matrix.node == steps.nvm.outputs.NVMRC }}
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage/lcov.info

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        with:
          fetch-depth: 0
          token: ${{ secrets.SEMANTIC_RELEASE }}
        uses: actions/checkout@v2

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Configure NPM Registry
        uses: actions/setup-node@v2
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
          cache: 'yarn'

      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Publish to NPM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn release
